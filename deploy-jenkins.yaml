---
- name: Install docker
  hosts: ec2_server
  become: yes
  tasks:
    - name: Update package index
      apt: update_cache=yes

    - name: Install packages to allow apt to use a repository over HTTPS
      apt: name={{ item }} state=present
      with_items:
      - apt-transport-https
      - ca-certificates
      - curl
      - software-properties-common

    - name: Add Docker's official GPG key
      apt_key: url=https://download.docker.com/linux/ubuntu/gpg state=present

    - name: Set up the stable repository
      apt_repository: repo='deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable' state=present

    - name: Install Docker CE
      apt: name=docker-ce state=present
    - name: start docker demon
      systemd: 
         name: docker
         state: started 

- name: add ubuntu user to docker group
  hosts: ec2_server
  become: true
  tasks: 
    - name: add user to docker group
      user: 
        name: ubuntu
        groups: docker 
        append: yes 
    - name: reconnect to server session
      meta: reset_connection

- name: Create jenkins image from docker file
  hosts: ec2_server
  # connection: local
  tasks:
  - name: check nexus folder stat
    stat:
      path: /home/ubuntu/Dockerfile
    register: stat_result
  - name: copy docker file to server
    copy:
      src: "/Users/mahmud/Desktop/skill-development/ansible/dockerfile"
      dest: "/home/ubuntu"
    when: not stat_result.stat.exists
  - name: Build Docker Jenkins Image
    docker_image:
      name: jenkins-docker
      build:
        path: /home/ubuntu/
        pull: "yes"
      source: build
      state: present

- name: Create jenkins container from image
  hosts: ec2_server
  vars: 
    container_name: jenkins
  # connection: local
  tasks:
  - name: Create Docker Jenkins Container
    docker_container:
      name: "{{ container_name }}"
      image: jenkins-docker
      ports:
       - "8080:8080"
       - "50000:50000"
      volumes:
       - "jenkins_home:/var/jenkins_home"
       - "/var/run/docker.sock:/var/run/docker.sock"
      state: started